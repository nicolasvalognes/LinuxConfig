""""""""""""""""""""
"""" FUNCTIONS """""
""""""""""""""""""""
function! s:header_c()
    execute "normal! ggi/**"
    execute "normal! o * @file " . expand("%:t")
    execute "normal! o * @class "  . substitute(expand("%:t"), "\\.cpp", "", "g")
    execute "normal! o * @author Valognes Nicolas (nicolas.valognes@resolutionspectra.com)"
    execute "normal! o * @copyright Copyright Resolution Spectra Systems Corp (13 chemin du Vieux Chene, Meylan 38240 France)"
    execute "normal! o * @version 1.0"
    execute "normal! o**/"
    execute "normal! ggvG="
    execute "normal! G"

    execute "normal! o#include \"" . expand("%:t")
    execute "normal! 2hcwh\""
    execute "normal! o"
    execute "normal! o" . substitute(expand("%:t"), "\\.cpp", "", "g")
    execute "normal! A::" . substitute(expand("%:t"), "\\.cpp", "()", "g")
    execute "normal! o{"
    execute "normal! o}"
    execute "normal! o"
    execute "normal! o" . substitute(expand("%:t"), "\\.cpp", "", "g")
    execute "normal! A::~" . substitute(expand("%:t"), "\\.cpp", "()", "g")
    execute "normal! o{"
    execute "normal! o}"
    execute "normal! o"
    execute "normal! 6k"
endfunction

function! s:doxy_header_h()
    let gatename = "_" . substitute(toupper(expand("%:t")), "\\.", "_", "g") . "_"
    execute "normal! Go#endif"
    execute "normal! ggi/**"
    execute "normal! o * @file " . expand("%:t")
    execute "normal! o * @class "  . substitute(expand("%:t"), "\\.h", "", "g")
    execute "normal! o * @headerfile "
    execute "normal! o * @author Valognes Nicolas (nicolas.valognes@resolutionspectra.com)"
    execute "normal! o * @copyright Copyright Resolution Spectra Systems Corp (13 chemin du Vieux Chene, Meylan 38240 France)"
    execute "normal! o * @version 1.0"
    execute "normal! o * @brief This class describe..."
    execute "normal! o * <br>Reference documents : <a href=\"FILE_PATH\">FILE_NAME</a>"
    execute "normal! o * <br>"
    execute "normal! o**/"
    "execute "normal! o"
    execute "normal! o#ifndef " . gatename
    execute "normal! o#define " . gatename . " "
    execute "normal! o"
    execute "normal! oclass " . substitute(expand("%:t"), "\\.h", "", "g")
    execute "normal! o{"
    execute "normal! opublic:"
    execute "normal! o" . substitute(expand("%:t"), "\\.h", "();", "g")
    execute "normal! o~" . substitute(expand("%:t"), "\\.h", "();", "g")
    execute "normal! o"
    execute "normal! oprivate:"
    execute "normal! o};"
    execute "normal! o"
    execute "normal! Gvgg="
endfunction


function! s:includeVarDoxygenComment()
    execute "normal! A //!<  "
    execute "normal! $"
    startreplace
endfunction

function! DelTagOfFile(file)
  let fullpath = a:file
  let cwd = getcwd()
  let tagfilename = cwd . "/tags"
  let f = substitute(fullpath, cwd . "/", "", "")
  let f = escape(f, './')
  let cmd = 'sed -i "/' . f . '/d" "' . tagfilename . '"'
  let resp = system(cmd)
endfunction

function! UpdateTags()
  let f = expand("%:p")
  let cwd = getcwd()
  let tagfilename = cwd . "/tags"
  let cmd = 'ctags -a -f ' . tagfilename . ' --c++-kinds=+p --fields=+iaS --extra=+q ' . '"' . f . '"'
  call DelTagOfFile(f)
  let resp = system(cmd)
endfunction

function! s:headerPythonPEP8()
    execute "normal! ggO# -*- coding: utf-8 -*-"
endfunction

function! s:pythonTodoComment()
    execute "normal! O# TODO - NVS - "
    let currentdate=strftime("%Y-%m-%d")
    execute "normal! A" . currentdate
    execute "normal! A -  "
    execute "normal! $"
    startreplace
endfunction

function! s:pythonBreakpoint()
  "execute "normal! Oimport pdb; pdb.set_trace()  # [DEBUG | TO REMOVE] Breakpoint"
  execute "normal! O# fmt: off"
  execute "normal! oimport pdb; pdb.set_trace()"
  execute "normal! o# fmt: on"
endfunction

function! s:pythonPep8()
  execute "normal! A  # nopep8"
endfunction

function! s:pythonFixComment()
    execute "normal! O# FIXME - NVS - "
    let currentdate=strftime("%Y-%m-%d")
    execute "normal! A" . currentdate
    execute "normal! A -  "
    execute "normal! $"
    startreplace
endfunction

function! s:pyDebug()
  execute "normal! O# [DEBUG]"
  execute "normal! omy_file = open('/tmp/pydebug.txt', 'w')"
  execute "normal! omy_file.write(str(response))"
  execute "normal! omy_file.close()"
endfunction

function! s:jsonFormat()
  execute ":g/'/s/'/\"/g"
  execute ":g/True/s/True/\"True\"/g"
  execute ":g/False/s/False/\"False\"/g"
  execute ":g/None/s/None/\"None\"/g"
  execute ":w"
  execute ":%!python3 -m json.tool"
endfunction



set tags+=/home/nicolas/00_Tools/wisebim_tags/py37_PlansToBim_middleware_tags
set tags+=/home/nicolas/00_Tools/wisebim_tags/plans2bim_front_tags
set tags+=/home/nicolas/00_Tools/wisebim_tags/plans2bim_middleware_tags
set tags+=/home/nicolas/00_Tools/wisebim_tags/plans2bim_core_tags
set tags+=/home/nicolas/00_Tools/wisebim_tags/cpp_headers_tags


"nnoremap <F2> :NERDTreeToggle /home/nicolas/01_Workspace/01-toruk<CR>
nnoremap <F2> :NERDTreeToggle<CR>
nnoremap <F3> :TagbarToggle<CR>
nnoremap <F4> :nohl<CR>
"nnoremap <F5> :%s/\s\+$//e<CR>:w<CR>
set pastetoggle=<F6>

""""""""" if C++ """"""""""
"nnoremap <F6> :call <SID>doxy_header_h()<CR>
"nnoremap <F7> :call <SID>header_c()<CR>
"nnoremap <F8> :call UpdateTags()<CR>

""""""""" if Python """"""""""
"nnoremap <F6> :call <SID>headerPythonPEP8()<CR>
"nnoremap <F7> :SyntasticCheck<CR>
"autocmd FileType python nnoremap <LocalLeader>yapf :0,$!yapf<CR>
":command Yapf :0,$!yapf<CR>
""""""""""""""""""""""""""""""
"nnoremap <F8> :sp<CR><C-w>w:terminal<CR><C-w>w:q!<CR>
"nnoremap <F9> :Calendar -view=year -split=horizontal -position=below -height=12<CR>
"nnoremap <F7> :HighlightCoverage!<CR>


"nnoremap <leader>t :tag <c-r><c-w><cr>
"nnoremap <leader>py :call <SID>headerPythonPEP8()<CR>
"nnoremap <leader>pyc :call <SID>pythonComment()<CR>
nnoremap <leader>t :call <SID>pythonTodoComment()<CR>
nnoremap <leader>f :call <SID>pythonFixComment()<CR>
nnoremap <leader>b :call <SID>pythonBreakpoint()<CR>
nnoremap <leader>p :call <SID>pythonPep8()<CR>

nnoremap <leader>deb :call <SID>pyDebug()<CR>
nnoremap <leader>json :call <SID>jsonFormat()<CR><CR>
nnoremap <Leader>dov :call <SID>includeVarDoxygenComment()<CR>
nnoremap <Leader>doc :Pydocstring<CR>
map <Leader>vp :VimuxPromptCommand<CR>
map <Leader>vl :VimuxRunLastCommand<CR>
map <Leader>vs :VimuxInterruptRunner<CR>
map <Leader>cov :Coveragepy session<CR>

"command! -nargs=0 WisebimHeader :call <SID>wisebim_file_header()

cnoreabbrev Ack Ack!

autocmd BufNewFile,BufRead *.ts setlocal ft=typescript

"set path+=/home/nicolas/01_Workspace/01_Wisebim/01_PlansToBim/plans2bim/
"set path+=/home/nicolas/01_Workspace/01_Wisebim/01_PlansToBim/plans2bim/core/include
"set path+=/usr/include

